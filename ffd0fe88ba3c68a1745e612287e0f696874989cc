{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "b06b73ae_fb22809b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 32288
      },
      "writtenOn": "2022-09-28T21:09:27Z",
      "side": 1,
      "message": "The current build issue seems to be caused by `charmcraft` installing `charms 3.0`. Locally I was able to solve this by changing charmcraft.yaml from\n```\nparts:\n  charm:\n    build-snaps:\n      - charm\n```\nto\n```\nparts:\n  charm:\n    build-snaps:\n      - charm/2.x/stable\n```\nbut I\u0027m not sure if it\u0027s appropriate to include this fix in this PR.",
      "revId": "ffd0fe88ba3c68a1745e612287e0f696874989cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "453d1733_2a13554d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 13686
      },
      "writtenOn": "2022-09-29T02:04:05Z",
      "side": 1,
      "message": "charm-recheck",
      "revId": "ffd0fe88ba3c68a1745e612287e0f696874989cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dc97a297_6aa8cf4b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 13686
      },
      "writtenOn": "2022-09-29T02:04:05Z",
      "side": 1,
      "message": "This should not count as a full review, I\u0027m responding to your issue with the incompatibility between charmcraft 2.0 and charm-tools 3.0.0.\n\nWe\u0027ve worked around the issue in charm-tools 3.0.1",
      "parentUuid": "b06b73ae_fb22809b",
      "revId": "ffd0fe88ba3c68a1745e612287e0f696874989cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cb2947ae_f53018c3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 13686
      },
      "writtenOn": "2022-09-29T02:59:25Z",
      "side": 1,
      "message": "Background on last failure: https://chat.canonical.com/canonical/pl/on4khn1c1jnqip751min3d1gtr",
      "revId": "ffd0fe88ba3c68a1745e612287e0f696874989cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "186b91ba_477bc700",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 13686
      },
      "writtenOn": "2022-09-29T04:48:39Z",
      "side": 1,
      "message": "charm-recheck",
      "revId": "ffd0fe88ba3c68a1745e612287e0f696874989cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "11a1ce24_d4af68a2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 13686
      },
      "writtenOn": "2022-10-06T09:12:12Z",
      "side": 1,
      "message": "Thank you for your work on this. The overall approach looks good, and I have a few comments in-line.",
      "revId": "ffd0fe88ba3c68a1745e612287e0f696874989cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "150fd7d0_302310bb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 32288
      },
      "writtenOn": "2022-10-06T16:26:41Z",
      "side": 1,
      "message": "Thanks for the thorough review. I\u0027ll address your points + I left some inline answers.",
      "revId": "ffd0fe88ba3c68a1745e612287e0f696874989cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4836e836_852a233d",
        "filename": "src/actions/cluster.py",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 13686
      },
      "writtenOn": "2022-10-06T09:12:12Z",
      "side": 1,
      "message": "The rest of this charms follows a different style for imports, so please amend them to comply.\n\nThe background on this is that as charms have evolved over the years it has become increasingly difficult to know from where exactly identifiers come, so we want all identifiers in the code to be prefixed with something that identifies from which module the identifier comes.\n\nFor built-in and standard library modules, just use import the module and prefix identifier with its module name.\n\nFor charm-helpers we ususally do something like `import charmhelpers.core as ch_core` and then use it like `ch_core.hookenv.log(...`",
      "revId": "ffd0fe88ba3c68a1745e612287e0f696874989cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3269f71a_2b593b64",
        "filename": "src/actions/cluster.py",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 32288
      },
      "writtenOn": "2022-10-06T16:26:41Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "4836e836_852a233d",
      "revId": "ffd0fe88ba3c68a1745e612287e0f696874989cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da216238_4d55a96a",
        "filename": "src/actions/cluster.py",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 13686
      },
      "writtenOn": "2022-10-06T09:12:12Z",
      "side": 1,
      "message": "1) This manual conversion is not necessary, you can access a dictionary version of the object at `raw_cluster_status.__dict__`\n\n2) You are providing the caller of the action with a machine readable YAML output, would it not make more sense to keep the existing dictionary ID\u0027s? If something in the other end of the action wants human readable labels, the translation could happen there?",
      "revId": "ffd0fe88ba3c68a1745e612287e0f696874989cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8184cbc5_7b935a37",
        "filename": "src/actions/cluster.py",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 32288
      },
      "writtenOn": "2022-10-06T16:26:41Z",
      "side": 1,
      "message": "My intention was to keep data format in the output of the action same as the output of the `ovn-appctl cluster/status` command. However I don\u0027t have any strong opinions about this, I can change it to direct `__dict__` conversion if you think that would be better.",
      "parentUuid": "da216238_4d55a96a",
      "revId": "ffd0fe88ba3c68a1745e612287e0f696874989cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1363291c_7f9b3ecc",
        "filename": "src/actions/cluster.py",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 13686
      },
      "writtenOn": "2022-10-07T07:24:15Z",
      "side": 1,
      "message": "My main concern is that whenever the cluster status object code changes, this would have to be updated to match, which is not a good situation to be in with regards to maintainability.\n\nIf you really want a \"pretty output\" mode or something similar, you need to add this as a method/property of the OVNClusterStatus class:\nhttps://github.com/juju/charm-helpers/blob/5302e0e5b3756f4f4d9d889592344b2f9f75547d/charmhelpers/contrib/network/ovs/ovn.py#L57",
      "parentUuid": "8184cbc5_7b935a37",
      "revId": "ffd0fe88ba3c68a1745e612287e0f696874989cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ae92676_17484b34",
        "filename": "src/actions/cluster.py",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 13686
      },
      "writtenOn": "2022-10-06T09:12:12Z",
      "side": 1,
      "message": "I wonder if it would be useful to put the server to juju unit map in a separate key and retain the original `servers` overview as is?",
      "revId": "ffd0fe88ba3c68a1745e612287e0f696874989cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "247d8853_3b13ad94",
        "filename": "src/actions/cluster.py",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 32288
      },
      "writtenOn": "2022-10-06T16:26:41Z",
      "side": 1,
      "message": "I thought that this would be the least intrusive way of introducing this additional data and I don\u0027t see much downsides to this. Do you see any disadvantages to this?\n\nPerhaps the one thing I can think of is that this way, if there are any \"abandoned\" servers, the information is scattered throughout the \"Servers\" dict in form of `Unit: \"UNKNOWN\"`. Whereas if there was a dedicated dict mapping units to servers the \"abandoned\" servers could be mapped under single key like \"UNKNOWN\".\n\nBut then there\u0027s a question about the structure of the list. Every unit should host single server (correct?) so it would make sense to have `Dict[str, str]`. However there can be multiple abandoned servers (if multiple units went missing) so the final structure would be `Dict[str, Union[str, List[str]]]`. Example:\n```\nunit_map:\n  ovn-central/0: aa11\n  ovn-central/1: bb22\n  UNKNOWN:\n    - cc33\n    - dd44\n```\nI don\u0027t really like this struct and it would introduce more complications for parsing it (on the side that would consume data from this action). What do you think?",
      "parentUuid": "3ae92676_17484b34",
      "revId": "ffd0fe88ba3c68a1745e612287e0f696874989cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c03b62c_f5d383d0",
        "filename": "src/actions/cluster.py",
        "patchSetId": 1
      },
      "lineNbr": 101,
      "author": {
        "id": 13686
      },
      "writtenOn": "2022-10-07T07:24:15Z",
      "side": 1,
      "message": "For the human operator, having access to the raw source data is always useful. In the event of something going wrong the two data sets can be compared to help reveal the truth.",
      "parentUuid": "247d8853_3b13ad94",
      "revId": "ffd0fe88ba3c68a1745e612287e0f696874989cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e421a832_1cdc1bf8",
        "filename": "src/actions/cluster.py",
        "patchSetId": 1
      },
      "lineNbr": 113,
      "author": {
        "id": 13686
      },
      "writtenOn": "2022-10-06T09:12:12Z",
      "side": 1,
      "message": "I see that you assert that this flag is set at the beginning of the main function, and it would be great with a comment about that here.",
      "revId": "ffd0fe88ba3c68a1745e612287e0f696874989cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1e05f130_0d6d1e8e",
        "filename": "src/actions/cluster.py",
        "patchSetId": 1
      },
      "lineNbr": 113,
      "author": {
        "id": 32288
      },
      "writtenOn": "2022-10-06T16:26:41Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "e421a832_1cdc1bf8",
      "revId": "ffd0fe88ba3c68a1745e612287e0f696874989cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ad42d270_62c50063",
        "filename": "src/actions/cluster.py",
        "patchSetId": 1
      },
      "lineNbr": 140,
      "author": {
        "id": 13686
      },
      "writtenOn": "2022-10-06T09:12:12Z",
      "side": 1,
      "message": "Juju walked back the change of naming of actions to functions, so please use the `action_set`, `action_fail` c-h functions instead.",
      "revId": "ffd0fe88ba3c68a1745e612287e0f696874989cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ff94ae7_91bf6d75",
        "filename": "src/actions/cluster.py",
        "patchSetId": 1
      },
      "lineNbr": 140,
      "author": {
        "id": 32288
      },
      "writtenOn": "2022-10-06T16:26:41Z",
      "side": 1,
      "message": "Oh, thanks for clarification.\n\nSide note: charmhelpers docs should be probably updated then as right now it still states that `action_*` is deprecated in favor of `function_*` [0]. It seems that the docs are really old, based on the commit from April 2020 [1].\n\n[0] https://charm-helpers.readthedocs.io/en/latest/api/charmhelpers.core.hookenv.html#charmhelpers.core.hookenv.action_fail\n[1] https://github.com/juju/charm-helpers/commit/28cc026ba6140e47b3a67989179d694279078129",
      "parentUuid": "ad42d270_62c50063",
      "revId": "ffd0fe88ba3c68a1745e612287e0f696874989cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "28ff7b8d_91953e99",
        "filename": "src/actions/cluster.py",
        "patchSetId": 1
      },
      "lineNbr": 140,
      "author": {
        "id": 13686
      },
      "writtenOn": "2022-10-07T07:24:15Z",
      "side": 1,
      "message": "Yeah, some work was started to at least undeprecate stuff here: https://github.com/juju/charm-helpers/pull/655 and PRs are welcome to clean up the rest of the mess.",
      "parentUuid": "1ff94ae7_91bf6d75",
      "revId": "ffd0fe88ba3c68a1745e612287e0f696874989cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b9595d0a_995ce9cb",
        "filename": "src/actions/cluster.py",
        "patchSetId": 1
      },
      "lineNbr": 140,
      "author": {
        "id": 32288
      },
      "writtenOn": "2022-10-13T02:52:00Z",
      "side": 1,
      "message": "In this case I think trigger of new doc build on readthedocs should be enough since the code/docstrings are already updated.",
      "parentUuid": "28ff7b8d_91953e99",
      "revId": "ffd0fe88ba3c68a1745e612287e0f696874989cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8d0019ed_970d081e",
        "filename": "src/actions/cluster.py",
        "patchSetId": 1
      },
      "lineNbr": 144,
      "author": {
        "id": 13686
      },
      "writtenOn": "2022-10-06T09:12:12Z",
      "side": 1,
      "message": "The charm exposes the `ovnsb_db` and `ovnnb_db` identifiers in Juju status etc, would it not make sense to keep using those instead of inventing a new identifier?",
      "revId": "ffd0fe88ba3c68a1745e612287e0f696874989cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c141b8cf_103f5c72",
        "filename": "src/actions/cluster.py",
        "patchSetId": 1
      },
      "lineNbr": 144,
      "author": {
        "id": 32288
      },
      "writtenOn": "2022-10-06T16:26:41Z",
      "side": 1,
      "message": "I guess they did not click with me very well because they do not feel very user friendly, they require bit of internal OVN knowledge and they are very similar so it\u0027s harder to distinguish them at glance (as opposed to stating `southbound-cluster`/ `northbound-cluster`). But you are right consistency is more important. I\u0027ll change them",
      "parentUuid": "8d0019ed_970d081e",
      "revId": "ffd0fe88ba3c68a1745e612287e0f696874989cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d237d531_074eb4c1",
        "filename": "src/actions/cluster.py",
        "patchSetId": 1
      },
      "lineNbr": 144,
      "author": {
        "id": 32288
      },
      "writtenOn": "2022-10-06T16:55:01Z",
      "side": 1,
      "message": "There\u0027s an additional issue. Apparently `action_set` does not allow underscores in the key names. Trying to do\n```python\nch_core.hookenv.action_set({\"ovnsb_db\": yaml.dump(sb_cluster, sort_keys\u003dFalse)})\n```\nresults in:\n\n```\nERROR key \"ovnsb_db\" must start and end with lowercase alphanumeric, and contain only lowercase alphanumeric, hyphens and periods\n```",
      "parentUuid": "c141b8cf_103f5c72",
      "revId": "ffd0fe88ba3c68a1745e612287e0f696874989cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ca750dd_a3245703",
        "filename": "src/actions/cluster.py",
        "patchSetId": 1
      },
      "lineNbr": 144,
      "author": {
        "id": 13686
      },
      "writtenOn": "2022-10-07T07:24:15Z",
      "side": 1,
      "message": "Seeking user friendliness is a great trait, however it has to be done in a consistent manner. IMHO adding new identifiers where some are used in one context and others are used in a different context just gives more source of confusion for the end user.\n\nFor the underscore issue, I guess we could either replace the underscore with a hyphen or drop the _db suffix?",
      "parentUuid": "d237d531_074eb4c1",
      "revId": "ffd0fe88ba3c68a1745e612287e0f696874989cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cbd0a3ef_1da5b222",
        "filename": "src/actions/cluster.py",
        "patchSetId": 1
      },
      "lineNbr": 144,
      "author": {
        "id": 32288
      },
      "writtenOn": "2022-10-13T02:52:00Z",
      "side": 1,
      "message": "In this case I think I\u0027ll go with dropping the _db suffix. Thanks",
      "parentUuid": "3ca750dd_a3245703",
      "revId": "ffd0fe88ba3c68a1745e612287e0f696874989cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bafb0350_06a0cd3a",
        "filename": "src/actions/cluster.py",
        "patchSetId": 1
      },
      "lineNbr": 147,
      "author": {
        "id": 13686
      },
      "writtenOn": "2022-10-06T09:12:12Z",
      "side": 1,
      "message": "The charm exposes the `ovnsb_db` and `ovnnb_db` identifiers in Juju status etc, would it not make sense to keep using those instead of inventing a new identifier?",
      "revId": "ffd0fe88ba3c68a1745e612287e0f696874989cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9ceb803f_ecf3340e",
        "filename": "src/actions/cluster.py",
        "patchSetId": 1
      },
      "lineNbr": 147,
      "author": {
        "id": 32288
      },
      "writtenOn": "2022-10-06T16:26:41Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "bafb0350_06a0cd3a",
      "revId": "ffd0fe88ba3c68a1745e612287e0f696874989cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "28fb2047_4d51506e",
        "filename": "src/actions/cluster.py",
        "patchSetId": 1
      },
      "lineNbr": 168,
      "author": {
        "id": 13686
      },
      "writtenOn": "2022-10-06T09:12:12Z",
      "side": 1,
      "message": "Why not use the already known `ovnsb_db` identifier here",
      "revId": "ffd0fe88ba3c68a1745e612287e0f696874989cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "83032e29_3637c471",
        "filename": "src/actions/cluster.py",
        "patchSetId": 1
      },
      "lineNbr": 168,
      "author": {
        "id": 32288
      },
      "writtenOn": "2022-10-06T16:26:41Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "28fb2047_4d51506e",
      "revId": "ffd0fe88ba3c68a1745e612287e0f696874989cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df2cf99e_40011f28",
        "filename": "src/actions/cluster.py",
        "patchSetId": 1
      },
      "lineNbr": 178,
      "author": {
        "id": 13686
      },
      "writtenOn": "2022-10-06T09:12:12Z",
      "side": 1,
      "message": "This is the second time you call this in this function, perhaps a helper function is in order?",
      "revId": "ffd0fe88ba3c68a1745e612287e0f696874989cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "387f5243_b1f677cd",
        "filename": "src/actions/cluster.py",
        "patchSetId": 1
      },
      "lineNbr": 178,
      "author": {
        "id": 32288
      },
      "writtenOn": "2022-10-06T16:26:41Z",
      "side": 1,
      "message": "3 out of 4 arguments for each call are different so the helper function would really only help to reduce number of arguments to 3. e.g.:\n```python\ndef kick_server(db, cluster, server_id)\n  ovn_appctl(db, (\"cluster/kick\", cluster, server_id))\n```\n\nUnless I misunderstood what you meant.",
      "parentUuid": "df2cf99e_40011f28",
      "revId": "ffd0fe88ba3c68a1745e612287e0f696874989cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a9815c9_5908403a",
        "filename": "src/actions/cluster.py",
        "patchSetId": 1
      },
      "lineNbr": 178,
      "author": {
        "id": 13686
      },
      "writtenOn": "2022-10-07T07:24:15Z",
      "side": 1,
      "message": "Some of these helper functions may feel excessive, but they are really powerful at multiple levels.\n\n1) For anyone not intimately familiar with the inner workings of the OVN command line tools, reading `kick_server()` immediately reveals whats going on, without having to decipher implementation details of `ovn-appctl` and the server it\u0027s talking to.\n\n2) At some point in time in the future the syntax or parameters required to do this may change, and it is then useful to have one place to change and one function with superior knowledge about how to perform this one task.",
      "parentUuid": "387f5243_b1f677cd",
      "revId": "ffd0fe88ba3c68a1745e612287e0f696874989cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c162e095_b40679dc",
        "filename": "src/actions/cluster.py",
        "patchSetId": 1
      },
      "lineNbr": 178,
      "author": {
        "id": 32288
      },
      "writtenOn": "2022-10-13T02:52:00Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "1a9815c9_5908403a",
      "revId": "ffd0fe88ba3c68a1745e612287e0f696874989cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "338ce53f_c37d0343",
        "filename": "src/actions/cluster.py",
        "patchSetId": 1
      },
      "lineNbr": 182,
      "author": {
        "id": 13686
      },
      "writtenOn": "2022-10-06T09:12:12Z",
      "side": 1,
      "message": "Why not use the already known `ovnnb_db` identifier here?",
      "revId": "ffd0fe88ba3c68a1745e612287e0f696874989cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1c931ac7_e35bf4db",
        "filename": "src/actions/cluster.py",
        "patchSetId": 1
      },
      "lineNbr": 182,
      "author": {
        "id": 32288
      },
      "writtenOn": "2022-10-06T16:26:41Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "338ce53f_c37d0343",
      "revId": "ffd0fe88ba3c68a1745e612287e0f696874989cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "20210ad4_fdf4688d",
        "filename": "src/reactive/ovn_central_handlers.py",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 13686
      },
      "writtenOn": "2022-10-06T09:12:12Z",
      "side": 1,
      "message": "Please don\u0027t do `from ... import` imports. See comment in actions/cluster.py",
      "revId": "ffd0fe88ba3c68a1745e612287e0f696874989cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9122cd4c_b20e074e",
        "filename": "src/reactive/ovn_central_handlers.py",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 32288
      },
      "writtenOn": "2022-10-06T16:26:41Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "20210ad4_fdf4688d",
      "revId": "ffd0fe88ba3c68a1745e612287e0f696874989cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "983336ce_f4b0ab2e",
        "filename": "src/reactive/ovn_central_handlers.py",
        "patchSetId": 1
      },
      "lineNbr": 258,
      "author": {
        "id": 13686
      },
      "writtenOn": "2022-10-06T09:12:12Z",
      "side": 1,
      "message": "Why are you gating this on the `certificates` relation? Re-joining the certificates relation does not mean the unit is leaving the cluster.\n\nThe handler should probably have some more guards. What happens if the cluster never formed or the charm code has not yet installed on the unit?",
      "revId": "ffd0fe88ba3c68a1745e612287e0f696874989cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7fe0ea6_11a87595",
        "filename": "src/reactive/ovn_central_handlers.py",
        "patchSetId": 1
      },
      "lineNbr": 258,
      "author": {
        "id": 32288
      },
      "writtenOn": "2022-10-06T16:26:41Z",
      "side": 1,
      "message": "The placement of this code (within the charm lifeceycle) proved to be really challenging. Ideally I would want to execute this on `stop` event, however I found out that at this point the certificates are already removed from the unit and `ovn-appctl` command can no longer communicate with the rest of the cluster, therefore it\u0027s unable to leave cluster gracefully.\nI think it makes most sense to execute this code when `certificates` relation emits the `broken` event because regardless if it\u0027s happening because the unit is being removed (juju remove-unit) or the relation is removed (juju remove-relation) this unit will no longer be capable of participating in the cluster and should attempt to leave it gracefully.\n\nIt should be noted that even if the code is placed in this hook I did not achieve 100% success rate of graceful departure. It still occasionally happens that unit is not capable of executing the `ovn-appctl cluster/leave` command. Therefore the charm-guide about cluster downscaling should mention that operator should check output of the `cluster-status` action and manually kick any servers that were left behind after the unit removal.\n\nI do not like this as it kinda depends on a race condition to be able to execute `ovn-appctl` command before the certificates disappear so if you have any suggestion on how to better place this code in the lifecycle I\u0027d be very grateful.\n\nNow to your points:\n\n\u003e  Re-joining the certificates relation does not mean the unit is leaving the cluster.\n\nI\u0027m not sure I understand this point. This code is executed only when `certificate-relation-broken` event is emitted and it happens only once. Either when the unit is removed or when the relation is removed. Re-joining certificates relation should not trigger this code. Or am I missing something?\n\n\n\u003e What happens if the cluster never formed or the charm code has not yet installed on the unit?\n\nThis function is designed to fail gracefully. If the unit is removed before the cluster is formed (or before the charm software is installed), the worst thing that happens is that two ERROR messaged will be logged (I\u0027m open to changing this to WARNING btw.)\n\nCorrect me if I misunderstood you but I feel like you are suggesting that this code will be executed periodically during the installation (and cluster setup) until the certificates become available. However I tested this and unless I misunderstood the documentation [0], this should really be executed only once per unit or relation removal.\n\n[0] https://juju.is/docs/sdk/relation-name-relation-broken-event",
      "parentUuid": "983336ce_f4b0ab2e",
      "revId": "ffd0fe88ba3c68a1745e612287e0f696874989cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7fe1a512_54b320ae",
        "filename": "src/reactive/ovn_central_handlers.py",
        "patchSetId": 1
      },
      "lineNbr": 258,
      "author": {
        "id": 13686
      },
      "writtenOn": "2022-10-07T07:24:15Z",
      "side": 1,
      "message": "Removing and then adding the certificates relation in a running cluster is a perfectly normal thing for an operator to do, and it can not lead to the side effect of units leaving the cluster.\n\nAfter removing the certificates relation the certificate data remains on disk, so if you have observed them not being there in the stop hook something else in the charm or package life cycle has removed them.\n\nLooks like some more work is needed to identify what is going on and how to best deal with the unit departure sequence.\n\nThere is some interesting discussion in this thread:\nhttps://discourse.charmhub.io/t/relation-broken-hook-not-running-in-peers-relation/3212/2",
      "parentUuid": "b7fe0ea6_11a87595",
      "revId": "ffd0fe88ba3c68a1745e612287e0f696874989cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc8cb31b_0fe86172",
        "filename": "src/reactive/ovn_central_handlers.py",
        "patchSetId": 1
      },
      "lineNbr": 259,
      "author": {
        "id": 13686
      },
      "writtenOn": "2022-10-06T09:12:12Z",
      "side": 1,
      "message": "The `_` here is not necessary.\n\nThe payload handling code in this function belongs in a charm class method.",
      "revId": "ffd0fe88ba3c68a1745e612287e0f696874989cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0a8f6eab_6802884f",
        "filename": "src/reactive/ovn_central_handlers.py",
        "patchSetId": 1
      },
      "lineNbr": 259,
      "author": {
        "id": 32288
      },
      "writtenOn": "2022-10-06T16:26:41Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "fc8cb31b_0fe86172",
      "revId": "ffd0fe88ba3c68a1745e612287e0f696874989cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed8577de_d3305eea",
        "filename": "src/reactive/ovn_central_handlers.py",
        "patchSetId": 1
      },
      "lineNbr": 259,
      "author": {
        "id": 32288
      },
      "writtenOn": "2022-10-06T17:07:30Z",
      "side": 1,
      "message": "Actually, I tested it and the underscore is necessary. Without it I\u0027m getting\n\n```\nTraceback (most recent call last):\n  File \"/var/lib/juju/agents/unit-ovn-central-1/.venv/lib/python3.10/site-packages/charms/reactive/__init__.py\", line 74, in main\n    bus.dispatch(restricted\u003drestricted_mode)\n  File \"/var/lib/juju/agents/unit-ovn-central-1/.venv/lib/python3.10/site-packages/charms/reactive/bus.py\", line 379, in dispatch\n    _invoke(hook_handlers)\n  File \"/var/lib/juju/agents/unit-ovn-central-1/.venv/lib/python3.10/site-packages/charms/reactive/bus.py\", line 359, in _invoke\n    handler.invoke()\n  File \"/var/lib/juju/agents/unit-ovn-central-1/.venv/lib/python3.10/site-packages/charms/reactive/bus.py\", line 181, in invoke\n    self._action(*args)\nTypeError: leave_cluster() takes 0 positional arguments but 1 was given\n```",
      "parentUuid": "0a8f6eab_6802884f",
      "revId": "ffd0fe88ba3c68a1745e612287e0f696874989cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c02b2fcd_c08f8250",
        "filename": "src/reactive/ovn_central_handlers.py",
        "patchSetId": 1
      },
      "lineNbr": 259,
      "author": {
        "id": 13686
      },
      "writtenOn": "2022-10-07T07:24:15Z",
      "side": 1,
      "message": "You\u0027re right, I missed the fact that this was a `hook` decorator.\n\nNote that the hook decorator is problematic and you may find that other handlers will run regardless of which hook it is.\n\nAn alternative could be to create a shallow hook function that just sets a flag. The other handlers can then avoid running when this flag is set.",
      "parentUuid": "ed8577de_d3305eea",
      "revId": "ffd0fe88ba3c68a1745e612287e0f696874989cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "52216a4b_95fc6df1",
        "filename": "src/tests/bundles/jammy-yoga.yaml",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 13686
      },
      "writtenOn": "2022-10-06T09:12:12Z",
      "side": 1,
      "message": "While I understand your desire to do this for the functional test, please don\u0027t. A cluster of a even number of units is an invalid configuration, and we should not \"sell\" invalid configuration in the functional test bundles.\n\nThe functional test can add/remove units when needed.",
      "revId": "ffd0fe88ba3c68a1745e612287e0f696874989cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bb4b5922_b69dddbe",
        "filename": "src/tests/bundles/jammy-yoga.yaml",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 32288
      },
      "writtenOn": "2022-10-06T16:26:41Z",
      "side": 1,
      "message": "Thanks. I\u0027ll rework this.",
      "parentUuid": "52216a4b_95fc6df1",
      "revId": "ffd0fe88ba3c68a1745e612287e0f696874989cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8bfd683_68351ee9",
        "filename": "src/tests/bundles/jammy-zed.yaml",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 13686
      },
      "writtenOn": "2022-10-06T09:12:12Z",
      "side": 1,
      "message": "While I understand your desire to do this for the functional test, please don\u0027t. A cluster of a even number of units is an invalid configuration, and we should not \"sell\" invalid configuration in the functional test bundles.\n\nThe functional test can add/remove units when needed.",
      "revId": "ffd0fe88ba3c68a1745e612287e0f696874989cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "da2329f7_da26fc89",
        "filename": "src/tests/bundles/jammy-zed.yaml",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 32288
      },
      "writtenOn": "2022-10-06T16:26:41Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "d8bfd683_68351ee9",
      "revId": "ffd0fe88ba3c68a1745e612287e0f696874989cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2b331e41_2f54e8e4",
        "filename": "src/tests/bundles/kinetic-zed.yaml",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 13686
      },
      "writtenOn": "2022-10-06T09:12:12Z",
      "side": 1,
      "message": "While I understand your desire to do this for the functional test, please don\u0027t. A cluster of a even number of units is an invalid configuration, and we should not \"sell\" invalid configuration in the functional test bundles.\n\nThe functional test can add/remove units when needed.",
      "revId": "ffd0fe88ba3c68a1745e612287e0f696874989cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "63494ade_c2bc01d7",
        "filename": "src/tests/bundles/kinetic-zed.yaml",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 32288
      },
      "writtenOn": "2022-10-06T16:26:41Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "2b331e41_2f54e8e4",
      "revId": "ffd0fe88ba3c68a1745e612287e0f696874989cc",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ]
}