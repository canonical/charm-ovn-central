{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "ec50799e_b0005313",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 13686
      },
      "writtenOn": "2023-07-18T11:08:27Z",
      "side": 1,
      "message": "Thank you for your work on this.\n\nWhile I may have chosen a different path, you have ended up with a low intervention change that appears to solve the problem in a pragmatic and backportable way.\n\nThe potential issue I see is that if anyone were to need the `install` method at runtime at a later stage in this charms lifetime, they may walk into this minefield again.\n\nWould there be some way to check whether this is the initial install directly from the `install` method?\n\nAn alternative approach would be to ditch the custom masking behavior altogether and make use of the now established `disable_services` and `enable_services` methods, however, that has a higher level of intervention and it raises some unknowns around side effects of extending the charm `services` list, either temporary or permanently.",
      "revId": "6a5e944526ff43ea7e95d4fb20dbfcdcf9f216fe",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b618a8fc_8dcf473f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 32288
      },
      "writtenOn": "2023-07-18T11:29:06Z",
      "side": 1,
      "message": "I didn\u0027t manage to find source code reference for `charm.installed` flag, but according to this doc[0] it\u0027s set only after the initial `install()` handler runs. We\u0027d be breaking a barrier between reactive handlers and charm implementation but we could check the `charm.installed` flag instead of implementing the `self.upgrade_in_progress` attribute.",
      "parentUuid": "ec50799e_b0005313",
      "revId": "6a5e944526ff43ea7e95d4fb20dbfcdcf9f216fe",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8bc2d331_8ff54a97",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 32288
      },
      "writtenOn": "2023-07-18T11:29:46Z",
      "side": 1,
      "message": "[0] https://docs.openstack.org/charm-guide/latest/concepts/charm-anatomy.html#reacting-to-events",
      "parentUuid": "b618a8fc_8dcf473f",
      "revId": "6a5e944526ff43ea7e95d4fb20dbfcdcf9f216fe",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0c2e7fd0_9983db6b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 13686
      },
      "writtenOn": "2023-07-18T11:42:07Z",
      "side": 1,
      "message": "This is where `charm.installed` is set:\nhttps://github.com/openstack/charm-layer-openstack/blob/1c9e662d78b328c6d4587171ccba08572e8dcf25/reactive/layer_openstack.py#L29\n\nI\u0027d be happy to accept breaking the barrier and checking for this flag in this case, as it both solves our immediate problem and avoids future problems with this method.\n\nFeel free to add a comment about what that the \"proper\" fix would be, and that we avoid it now because of high level of intervention/issues with backport and some unknown potential side effects with changing the `services` list.",
      "parentUuid": "8bc2d331_8ff54a97",
      "revId": "6a5e944526ff43ea7e95d4fb20dbfcdcf9f216fe",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d459d916_fc4db9e6",
        "filename": "src/lib/charm/openstack/ovn_central.py",
        "patchSetId": 1
      },
      "lineNbr": 1012,
      "author": {
        "id": 13686
      },
      "writtenOn": "2023-07-18T11:08:27Z",
      "side": 1,
      "message": "The name of this class instance variable is a bit unclear, because the charm can deal with multiple types of upgrades, such as charm upgrade, package upgrade and series upgrade.\n\nWould perhaps `charm_upgrade_in_progress` be better?",
      "revId": "6a5e944526ff43ea7e95d4fb20dbfcdcf9f216fe",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "059f861a_f5f0038f",
        "filename": "src/lib/charm/openstack/ovn_central.py",
        "patchSetId": 1
      },
      "lineNbr": 1012,
      "author": {
        "id": 32288
      },
      "writtenOn": "2023-07-18T11:29:06Z",
      "side": 1,
      "message": "Yup. That\u0027s definitely better. I\u0027ll update it if we decide to go down this road.",
      "parentUuid": "d459d916_fc4db9e6",
      "revId": "6a5e944526ff43ea7e95d4fb20dbfcdcf9f216fe",
      "serverId": "4a232e18-c5a9-48ee-94c0-e04e7cca6543"
    }
  ]
}